/// <reference types="googlemaps" />
import { SimpleChanges, OnChanges, OnDestroy } from '@angular/core';
import { BaseMapDirective } from './base-map-directive';
import { NguiMapComponent } from '../components/ngui-map.component';
import { NavigatorGeolocation } from '../services/navigator-geolocation';
import * as ɵngcc0 from '@angular/core';
export declare class DirectionsRenderer extends BaseMapDirective implements OnChanges, OnDestroy {
    geolocation: NavigatorGeolocation;
    directions: any;
    draggable: any;
    hideRouteList: any;
    infoWindow: any;
    panel: any;
    markerOptions: any;
    polylineOptions: any;
    preserveViewport: any;
    routeIndex: any;
    suppressBicyclingLayer: any;
    suppressInfoWindows: any;
    suppressMarkers: any;
    suppressPolylines: any;
    directions_changed: any;
    directionsRequest: google.maps.DirectionsRequest;
    directionsService: google.maps.DirectionsService;
    directionsRenderer: google.maps.DirectionsRenderer;
    constructor(nguiMapComponent: NguiMapComponent, geolocation: NavigatorGeolocation);
    initialize(): void;
    ngOnChanges(changes: SimpleChanges): void;
    showDirections(directionsRequest: google.maps.DirectionsRequest): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DirectionsRenderer>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DirectionsRenderer, "ngui-map > directions-renderer", never, {
    "directions": "directions";
    "draggable": "draggable";
    "hideRouteList": "hideRouteList";
    "infoWindow": "infoWindow";
    "panel": "panel";
    "markerOptions": "markerOptions";
    "polylineOptions": "polylineOptions";
    "preserveViewport": "preserveViewport";
    "routeIndex": "routeIndex";
    "suppressBicyclingLayer": "suppressBicyclingLayer";
    "suppressInfoWindows": "suppressInfoWindows";
    "suppressMarkers": "suppressMarkers";
    "suppressPolylines": "suppressPolylines";
    "directionsRequest": "directions-request";
}, {
    "directions_changed": "directions_changed";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aW9ucy1yZW5kZXJlci5kLnRzIiwic291cmNlcyI6WyJkaXJlY3Rpb25zLXJlbmRlcmVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgdHlwZXM9XCJnb29nbGVtYXBzXCIgLz5cbmltcG9ydCB7IFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcywgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlTWFwRGlyZWN0aXZlIH0gZnJvbSAnLi9iYXNlLW1hcC1kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTmd1aU1hcENvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvbmd1aS1tYXAuY29tcG9uZW50JztcbmltcG9ydCB7IE5hdmlnYXRvckdlb2xvY2F0aW9uIH0gZnJvbSAnLi4vc2VydmljZXMvbmF2aWdhdG9yLWdlb2xvY2F0aW9uJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERpcmVjdGlvbnNSZW5kZXJlciBleHRlbmRzIEJhc2VNYXBEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgZ2VvbG9jYXRpb246IE5hdmlnYXRvckdlb2xvY2F0aW9uO1xuICAgIGRpcmVjdGlvbnM6IGFueTtcbiAgICBkcmFnZ2FibGU6IGFueTtcbiAgICBoaWRlUm91dGVMaXN0OiBhbnk7XG4gICAgaW5mb1dpbmRvdzogYW55O1xuICAgIHBhbmVsOiBhbnk7XG4gICAgbWFya2VyT3B0aW9uczogYW55O1xuICAgIHBvbHlsaW5lT3B0aW9uczogYW55O1xuICAgIHByZXNlcnZlVmlld3BvcnQ6IGFueTtcbiAgICByb3V0ZUluZGV4OiBhbnk7XG4gICAgc3VwcHJlc3NCaWN5Y2xpbmdMYXllcjogYW55O1xuICAgIHN1cHByZXNzSW5mb1dpbmRvd3M6IGFueTtcbiAgICBzdXBwcmVzc01hcmtlcnM6IGFueTtcbiAgICBzdXBwcmVzc1BvbHlsaW5lczogYW55O1xuICAgIGRpcmVjdGlvbnNfY2hhbmdlZDogYW55O1xuICAgIGRpcmVjdGlvbnNSZXF1ZXN0OiBnb29nbGUubWFwcy5EaXJlY3Rpb25zUmVxdWVzdDtcbiAgICBkaXJlY3Rpb25zU2VydmljZTogZ29vZ2xlLm1hcHMuRGlyZWN0aW9uc1NlcnZpY2U7XG4gICAgZGlyZWN0aW9uc1JlbmRlcmVyOiBnb29nbGUubWFwcy5EaXJlY3Rpb25zUmVuZGVyZXI7XG4gICAgY29uc3RydWN0b3Iobmd1aU1hcENvbXBvbmVudDogTmd1aU1hcENvbXBvbmVudCwgZ2VvbG9jYXRpb246IE5hdmlnYXRvckdlb2xvY2F0aW9uKTtcbiAgICBpbml0aWFsaXplKCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgc2hvd0RpcmVjdGlvbnMoZGlyZWN0aW9uc1JlcXVlc3Q6IGdvb2dsZS5tYXBzLkRpcmVjdGlvbnNSZXF1ZXN0KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19